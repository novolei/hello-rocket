{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0","program":"C:\\Users\\aresray\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","universal_hash","--edition=2018","C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=eae3f23b99f09bd0","-C","extra-filename=-eae3f23b99f09bd0","--out-dir","f:\\Rust\\hello-rocket\\target\\rls\\debug\\deps","-L","dependency=f:\\Rust\\hello-rocket\\target\\rls\\debug\\deps","--extern","generic_array=f:\\Rust\\hello-rocket\\target\\rls\\debug\\deps\\libgeneric_array-aa702bfa13a7054a.rmeta","--extern","subtle=f:\\Rust\\hello-rocket\\target\\rls\\debug\\deps\\libsubtle-fd299eaea939e5ad.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\aresray\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"f:\\Rust\\hello-rocket\\target\\rls\\debug\\deps\\libuniversal_hash-eae3f23b99f09bd0.rmeta"},"prelude":{"crate_id":{"name":"universal_hash","disambiguator":[204013260851015736,11889047365123907141]},"crate_root":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[13611023294341355437,10043691270023661894]}},{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7491082891882765782,16585286864171082077]}},{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13475896778791491548,12248248351844131012]}},{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[14400354196254568970,14876069220641822211]}},{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":5,"id":{"name":"typenum","disambiguator":[8086296164313996436,631848053552025145]}},{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","num":6,"id":{"name":"subtle","disambiguator":[14249250514550924825,5357207546905112240]}}],"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":5238,"line_start":1,"line_end":171,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":961,"byte_end":974,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":5238,"line_start":1,"line_end":171,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":47},{"krate":0,"index":60},{"krate":0,"index":58},{"krate":0,"index":57},{"krate":0,"index":55},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":49},{"krate":0,"index":50}],"decl_id":null,"docs":" Traits for [Universal Hash Functions].","sig":null,"attributes":[{"value":"/ Traits for [Universal Hash Functions].","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Universal hash functions select from a \"universal family\" of possible","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":47,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ hash functions selected by a key. They are well suited to the purpose","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":121,"byte_end":194,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ of \"one time authenticators\" for a sequence of bytestring inputs,","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":195,"byte_end":264,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ as their construction has a number of desirable properties such as","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":265,"byte_end":335,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ pairwise independence as well as amenability to efficient implementations,","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":336,"byte_end":414,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ particularly when implemented using SIMD instructions.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":415,"byte_end":473,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":474,"byte_end":477,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When combined with a cipher, such as in Galois/Counter Mode or the","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":478,"byte_end":548,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ Salsa20 family AEAD constructions, they can provide the core functionality","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":549,"byte_end":627,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ for a Message Authentication Code (MAC).","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":628,"byte_end":672,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":673,"byte_end":676,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [Universal Hash Functions]: https://en.wikipedia.org/wiki/Universal_hashing","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":677,"byte_end":756,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"no_std","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":758,"byte_end":768,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":868,"byte_end":908,"line_start":18,"line_end":18,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1204,"byte_end":1217,"line_start":31,"line_end":31,"column_start":11,"column_end":24},"name":"UniversalHash","qualname":"::UniversalHash","value":"UniversalHash: Clone","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" The `UniversalHash` trait defines a generic interface for universal hash\n functions.\n","sig":null,"attributes":[{"value":"/ The `UniversalHash` trait defines a generic interface for universal hash","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1102,"byte_end":1178,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1179,"byte_end":1193,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1292,"byte_end":1299,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::UniversalHash::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Size of the key for the universal hash function\n","sig":null,"attributes":[{"value":"/ Size of the key for the universal hash function","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1231,"byte_end":1282,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1402,"byte_end":1411,"line_start":35,"line_end":35,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::UniversalHash::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Size of the inputs to and outputs from the universal hash function\n","sig":null,"attributes":[{"value":"/ Size of the inputs to and outputs from the universal hash function","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1322,"byte_end":1392,"line_start":34,"line_end":34,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1503,"byte_end":1506,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"new","qualname":"::UniversalHash::new","value":"pub fn new(&GenericArray<u8, Self::KeySize>) -> Self","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Instantiate a universal hash function with the given key\n","sig":null,"attributes":[{"value":"/ Instantiate a universal hash function with the given key","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1435,"byte_end":1495,"line_start":37,"line_end":37,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1618,"byte_end":1630,"line_start":41,"line_end":41,"column_start":8,"column_end":20},"name":"update_block","qualname":"::UniversalHash::update_block","value":"pub fn update_block(&mut Self, &GenericArray<u8, Self::BlockSize>)","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Input a block into the universal hash function\n","sig":null,"attributes":[{"value":"/ Input a block into the universal hash function","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1560,"byte_end":1610,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2035,"byte_end":2048,"line_start":49,"line_end":49,"column_start":8,"column_end":21},"name":"update_padded","qualname":"::UniversalHash::update_padded","value":"pub fn update_padded(&mut Self, &[u8])","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Input data into the universal hash function. If the length of the\n data is not a multiple of the block size, the remaining data is\n padded with zeroes up to the `BlockSize`.","sig":null,"attributes":[{"value":"/ Input data into the universal hash function. If the length of the","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1691,"byte_end":1760,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ data is not a multiple of the block size, the remaining data is","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1765,"byte_end":1832,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ padded with zeroes up to the `BlockSize`.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1837,"byte_end":1882,"line_start":45,"line_end":45,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1887,"byte_end":1890,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This approach is frequently used by AEAD modes which use","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1895,"byte_end":1955,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/ Message Authentication Codes (MACs) based on universal hashing.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1960,"byte_end":2027,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2557,"byte_end":2562,"line_start":66,"line_end":66,"column_start":8,"column_end":13},"name":"reset","qualname":"::UniversalHash::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Reset `UniversalHash` instance.\n","sig":null,"attributes":[{"value":"/ Reset `UniversalHash` instance.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2514,"byte_end":2549,"line_start":65,"line_end":65,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2659,"byte_end":2665,"line_start":69,"line_end":69,"column_start":8,"column_end":14},"name":"result","qualname":"::UniversalHash::result","value":"pub fn result(Self) -> Output<Self::BlockSize>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Obtain the [`Output`] of a `UniversalHash` function and consume it.\n","sig":null,"attributes":[{"value":"/ Obtain the [`Output`] of a `UniversalHash` function and consume it.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2580,"byte_end":2651,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2819,"byte_end":2831,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::UniversalHash::result_reset","value":"pub fn result_reset(&mut Self) -> Output<Self::BlockSize>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Obtain the [`Output`] of a `UniversalHash` computation and reset it back\n to its initial state.\n","sig":null,"attributes":[{"value":"/ Obtain the [`Output`] of a `UniversalHash` computation and reset it back","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2705,"byte_end":2781,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ to its initial state.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2786,"byte_end":2811,"line_start":72,"line_end":72,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3163,"byte_end":3169,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"verify","qualname":"::UniversalHash::verify","value":"pub fn verify(Self, &GenericArray<u8, Self::BlockSize>) -> Result<(), Error>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Verify the `UniversalHash` of the processed input matches a given [`Output`].\n This is useful when constructing Message Authentication Codes (MACs)\n from universal hash functions.\n","sig":null,"attributes":[{"value":"/ Verify the `UniversalHash` of the processed input matches a given [`Output`].","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":2958,"byte_end":3039,"line_start":79,"line_end":79,"column_start":5,"column_end":86}},{"value":"/ This is useful when constructing Message Authentication Codes (MACs)","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3044,"byte_end":3116,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ from universal hash functions.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3121,"byte_end":3155,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3650,"byte_end":3656,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"Output","qualname":"::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Outputs of universal hash functions which are a thin wrapper around a\n byte array. Provides a safe `Eq` implementation that runs in constant time,\n which is useful for implementing Message Authentication Codes (MACs) based\n on universal hashing.\n","sig":null,"attributes":[{"value":"/ Outputs of universal hash functions which are a thin wrapper around a","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3363,"byte_end":3436,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ byte array. Provides a safe `Eq` implementation that runs in constant time,","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3437,"byte_end":3516,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ which is useful for implementing Message Authentication Codes (MACs) based","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3517,"byte_end":3595,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ on universal hashing.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3596,"byte_end":3621,"line_start":94,"line_end":94,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3805,"byte_end":3808,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Output<N>>::new","value":"pub fn new(GenericArray<u8, N>) -> Output<N>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Block`.\n","sig":null,"attributes":[{"value":"/ Create a new `Block`.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3768,"byte_end":3793,"line_start":104,"line_end":104,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3948,"byte_end":3958,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Output<N>>::into_bytes","value":"pub fn into_bytes(Self) -> GenericArray<u8, N>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner `GenericArray` this type wraps\n","sig":null,"attributes":[{"value":"/ Get the inner `GenericArray` this type wraps","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3888,"byte_end":3936,"line_start":109,"line_end":109,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4888,"byte_end":4893,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for when the `Output` of a `UniversalHash`\n is not equal to the expected value.\n","sig":null,"attributes":[{"value":"/ Error type for when the `Output` of a `UniversalHash`","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4725,"byte_end":4782,"line_start":153,"line_end":153,"column_start":1,"column_end":58}},{"value":"/ is not equal to the expected value.","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4783,"byte_end":4822,"line_start":154,"line_end":154,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3722,"byte_end":3728,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4056,"byte_end":4062,"line_start":115,"line_end":115,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4228,"byte_end":4234,"line_start":124,"line_end":124,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4389,"byte_end":4395,"line_start":133,"line_end":133,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4547,"byte_end":4553,"line_start":142,"line_end":142,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4711,"byte_end":4717,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":1219,"byte_end":1224,"line_start":31,"line_end":31,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1746},"to":{"krate":0,"index":12}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":3722,"byte_end":3728,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":41},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4056,"byte_end":4062,"line_start":115,"line_end":115,"column_start":39,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1967}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4228,"byte_end":4234,"line_start":124,"line_end":124,"column_start":47,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1967}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4389,"byte_end":4395,"line_start":133,"line_end":133,"column_start":28,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":41},"to":{"krate":6,"index":39}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4547,"byte_end":4553,"line_start":142,"line_end":142,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1774}},{"span":{"file_name":"C:\\Users\\aresray\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\universal-hash-0.3.0\\src\\lib.rs","byte_start":4711,"byte_end":4717,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":1779}}]}